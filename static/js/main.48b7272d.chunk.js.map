{"version":3,"sources":["App.js","index.js"],"names":["Video","styled","video","App","stream","useRef","callAccepted","userVid","partnerVid","socket","onlineUsersToCall","messageText","messages","yourName","yourPeer","useState","yourID","setYourID","videoEnabled","setVideoEnabled","audioEnabled","setAudioEnabled","users","setUsers","inCall","setInCall","messagesTemplate","setMessagesTemplate","useEffect","navigator","mediaDevices","getUserMedia","audio","then","s","current","srcObject","io","prompt","emit","on","allUsersSocketEvent","yourIDSocketEvent","data","tryToCallSocketEvent","id","a","from","signalFromCaller","console","log","peer","Peer","initiator","trickle","config","iceServers","urls","username","credential","signal","to","signalFromPartner","rawMessage","appendMessage","Object","keys","map","key","className","onClick","startCalling","message","JSON","parse","unshift","template","msg","index","user","formatMessage","isHttpLink","href","target","str","match","getVideoTracks","enabled","getAudioTracks","playsInline","ref","muted","autoPlay","type","value","stringify","send","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b7272d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport Peer from 'simple-peer';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\n\nimport './index.css';\n\nimport servers from './ices';\n\nconst Video = styled.video`\n  width: 400px;\n  margin-right: 100px;\n  border: 10px solid #171a22;\n`;\n\nfunction App() {\n  const stream = useRef();\n  const callAccepted = useRef(false);\n  // const callEstablished = useRef(false);\n  // const [callAccepted, setCallAccepted] = useState(false);\n  // const [callEstablished, setCallAccepted] = useState(false);\n\n  const userVid = useRef();\n  const partnerVid = useRef();\n  const socket = useRef();\n  const onlineUsersToCall = useRef();\n  const messageText = useRef();\n  const chat = useRef();\n\n  const messages = useRef([]);\n\n  const yourName = useRef();\n  const yourPeer = useRef();\n  const [yourID, setYourID] = useState();\n\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [users, setUsers] = useState();\n  const [inCall, setInCall] = useState(false);\n  const [messagesTemplate, setMessagesTemplate] = useState('');\n  // const [stream, setStream] = useState();\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((s) => {\n      if (userVid.current) {\n        userVid.current.srcObject = s;\n        stream.current = s;\n      }\n    });\n\n    socket.current = io('https://tranquil-inlet-70924.herokuapp.com/');\n    yourName.current = prompt('What is your name, hero?');\n\n    socket.current.emit('enter', yourName.current);\n    socket.current.on('allUsers', allUsersSocketEvent);\n    socket.current.on('yourID', yourIDSocketEvent);\n    socket.current.on('tryToCall', (data) => {\n      tryToCallSocketEvent(data);\n    });\n  }, []);\n\n  const allUsersSocketEvent = (users) => {\n    setUsers(users);\n  };\n\n  const yourIDSocketEvent = (id) => {\n    setYourID(id);\n  };\n\n  const tryToCallSocketEvent = async (data) => {\n    const { from, signalFromCaller } = data;\n\n    console.log('caller tries to talk with you');\n\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream.current,\n      config: {\n        iceServers: [\n          {\n            urls: 'stun:numb.viagenie.ca',\n            username: 'sultan1640@gmail.com',\n            credential: '98376683',\n          },\n          {\n            urls: 'turn:numb.viagenie.ca',\n            username: 'sultan1640@gmail.com',\n            credential: '98376683',\n          },\n        ],\n      },\n    });\n\n    peer.on('signal', (signal) => {\n      yourPeer.current = peer;\n      socket.current.emit('acceptCall', { to: from, signalFromPartner: signal });\n\n      console.log('partner emits accept call');\n    });\n\n    peer.on('stream', (data) => {\n      setInCall(true);\n      partnerVid.current.srcObject = data;\n\n      console.log('partner recives stream');\n    });\n\n    peer.on('data', (rawMessage) => {\n      appendMessage(rawMessage);\n    });\n\n    peer.signal(signalFromCaller);\n  };\n\n  const startCalling = (id) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      config: {\n        iceServers: [\n          {\n            urls: 'stun:numb.viagenie.ca',\n            username: 'sultan1640@gmail.com',\n            credential: '98376683',\n          },\n          {\n            urls: 'turn:numb.viagenie.ca',\n            username: 'sultan1640@gmail.com',\n            credential: '98376683',\n          },\n        ],\n      },\n      stream: stream.current,\n    });\n\n    peer.on('signal', (data) => {\n      yourPeer.current = peer;\n\n      console.log('call started');\n\n      if (!callAccepted.current) {\n        socket.current.emit('call', { from: yourID, to: id, signalFromCaller: data });\n      }\n    });\n\n    peer.on('stream', (data) => {\n      partnerVid.current.srcObject = data;\n      console.log('recived from partner' + data);\n    });\n\n    peer.on('disconnect', () => {\n      console.log('closed');\n    });\n\n    peer.on('data', (rawMessage) => {\n      appendMessage(rawMessage);\n    });\n\n    socket.current.on('callAccepted', (signalFromPartner) => {\n      peer.signal(signalFromPartner);\n      setInCall(true);\n\n      callAccepted.current = true;\n\n      console.log('call accepted');\n    });\n  };\n\n  if (users) {\n    onlineUsersToCall.current = Object.keys(users).map((id) => {\n      return (\n        id !== yourID && (\n          <li key={id}>\n            <button className='contactBtn' onClick={() => startCalling(id)}>\n              <i className='phone-icon fas fa-phone-alt'></i> {users[id]}\n            </button>\n          </li>\n        )\n      );\n    });\n  }\n\n  const switchVideo = () => {\n    stream.current.getVideoTracks()[0].enabled = !stream.current.getVideoTracks()[0].enabled;\n    setVideoEnabled(!videoEnabled);\n  };\n\n  const switchAudio = () => {\n    stream.current.getAudioTracks()[0].enabled = !stream.current.getAudioTracks()[0].enabled;\n    setAudioEnabled(!audioEnabled);\n  };\n\n  const getVideoIcon = () => {\n    return videoEnabled ? <i className='fas fa-video'></i> : <i className='fas fa-video-slash'></i>;\n  };\n\n  const getAudioIcon = () => {\n    return audioEnabled ? (\n      <i className='fas fa-microphone'></i>\n    ) : (\n      <i className='fas fa-microphone-slash'></i>\n    );\n  };\n\n  const getClassesForVideoSwitcher = () => {\n    return videoEnabled ? 'switcher on' : 'switcher';\n  };\n\n  const getClassesForAudioSwitcher = () => {\n    return audioEnabled ? 'switcher on' : 'switcher';\n  };\n\n  const onMessageSend = () => {\n    const user = yourName.current;\n    const message = messageText.current.value;\n\n    if (user && message) {\n      const rawMessage = JSON.stringify({ user, message });\n      yourPeer.current.send(rawMessage);\n      appendMessage(rawMessage);\n\n      messageText.current.value = '';\n    }\n  };\n\n  const appendMessage = (rawMessage) => {\n    const message = JSON.parse(rawMessage);\n    messages.current.unshift(message);\n\n    const template = messages.current.map((msg, index) => {\n      return (\n        <li key={index}>\n          <div className='message-body'>\n            <div className='message-sender'>\n              <div className='message-sender-ava'>{msg.user[0]}</div>\n              <span className='message-sender-name'>{msg.user}</span>\n            </div>\n            <div className='message-content'>{formatMessage(msg.message)}</div>\n          </div>\n        </li>\n      );\n    });\n\n    setMessagesTemplate(template);\n  };\n\n  const formatMessage = (message) => {\n    if (isHttpLink(message)) {\n      return (\n        <a href={message} target='_blank'>\n          {message}\n        </a>\n      );\n    }\n\n    return message;\n  };\n\n  const isHttpLink = (str) => {\n    return str.match(/^http\\S+/gim);\n  };\n\n  return (\n    <div className='App'>\n      <div className='row'>\n        <div className='user-media'>\n          <div className='media-switchers'>\n            <button className={getClassesForVideoSwitcher()} onClick={switchVideo}>\n              {getVideoIcon()}\n            </button>\n\n            <button className={getClassesForAudioSwitcher()} onClick={switchAudio}>\n              {getAudioIcon()}\n            </button>\n          </div>\n          <Video playsInline ref={userVid} muted autoPlay />\n        </div>\n\n        <div>{inCall && <Video playsInline ref={partnerVid} autoPlay />}</div>\n      </div>\n\n      {/* {console.log('render', callAccepted)} */}\n\n      <div className='row'>\n        <ul className='row contacts-list'>{onlineUsersToCall.current}</ul>\n      </div>\n\n      {inCall && (\n        <div>\n          <div className='row chatInput'>\n            <input className='messageTxt' type='text' ref={messageText} />\n            <button className='messageSendBtn' onClick={onMessageSend}>\n              <i class='fas fa-paper-plane'></i>\n            </button>\n          </div>\n\n          <div className='chat-thread'>\n            <ul>{messagesTemplate}</ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}